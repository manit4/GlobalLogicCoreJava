package com.global;


interface Employee {//you can not instantiate an interface but you can hold the object of its implementation 
						//class in the reference variable of interface being implemented... 
	
	
	void trousers();//methods in interface are always public and abstract by default
	void shirt();
}

class GlobalLogic implements Employee {

	
	public void trousers() {//all the methods being over-ridden need to be public in implementation class...
		
		System.out.println("inside trousers of Global");
	}

	public void shirt() {
		
		System.out.println("inside shirt of Global");
		
	}
	
	
}

public class Interfacess {
	
	public static void main(String[] args) {
		
		GlobalLogic globalLogic = new GlobalLogic();
		
		globalLogic.shirt();    globalLogic.trousers();
		Employee employee = new Employee();//can not instantiate an interface
		
		Employee employee2 = new GlobalLogic();
		employee2.shirt();    employee2.trousers();
		
	}

}
